<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <link rel="self" href="https://j-e-s-s-e.com/feed.xml"/>
  <author>
    <name>Jesse Claven</name>
  </author>
  <id>https://j-e-s-s-e.com</id>
  <title>Notes · Jesse Claven</title>
  <updated>2023-11-12T16:07:17.989519Z</updated>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/makeup-parser-for-swift"/>
    <content type="html">&lt;p&gt;
Having switched to using Elixir and NimblePublisher for the backend of my personal website, I’ve needed to improve the availability of Makeup parsers. Firstly, starting with Swift, with &lt;a href=&quot;https://github.com/jesse-c/makeup_swift&quot;&gt;&lt;code class=&quot;inline&quot;&gt;makeup_swift&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
It’s incredibly bare bones, so far.&lt;/p&gt;
&lt;p&gt;
The approach so far is to be fairly true to the Swift Language Reference&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;. The prioritisation is hopefully on the more common parts of the language.&lt;/p&gt;
&lt;p&gt;
Contributions are heavily welcomed and encouraged!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://docs.swift.org/swift-book/documentation/the-swift-programming-language/aboutthelanguagereference&quot;&gt;Swift Language Reference&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>makeup-parser-for-swift</id>
    <title>Makeup parser for Swift</title>
    <updated>2023-08-25T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/raycast-extension-for-himalaya-released"/>
    <content type="html">&lt;p&gt;
Previously&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;, I wrote about a paradigm where you had daemon which had multi-UIs that interacted with it. For some time I had wanted to quickly be able to act on emails as they come in. Someone is working on a Raycast extension that uses AppleScript to interact with Mail.app&lt;a href=&quot;#fn:3&quot; id=&quot;fnref:3&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;3&lt;/a&gt;. Whilst it’s tractable, it was taking some time&amp;mdash;and then I remembered Himalaya&lt;a href=&quot;#fn:4&quot; id=&quot;fnref:4&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;4&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;
After testing it out, I was happy with it and set out to try and build a Raycast extension&lt;a href=&quot;#fn:5&quot; id=&quot;fnref:5&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;5&lt;/a&gt; around it. I’m happy to further announce that it’s available for us! I’ve already had several new minor versions since the original release.&lt;/p&gt;
&lt;p&gt;
Along with this, I got into a discussion with @soywood&lt;a href=&quot;#fn:6&quot; id=&quot;fnref:6&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;6&lt;/a&gt; over email as I had sponsored him on GitHub. It turns out, the paradigm&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt; I wrote about, and his own project&lt;a href=&quot;#fn:6&quot; id=&quot;fnref:6&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;6&lt;/a&gt; had converged on the same approach! Hilariously, we had both been working on Pomodoro timers.&lt;/p&gt;
&lt;p&gt;
Up next? A Raycast extension for Comodoro&lt;a href=&quot;#fn:8&quot; id=&quot;fnref:8&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;8&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;@/notes/multi-uis-with-grpc.md&quot;&gt;Multi-UIs for a daemon and using gRPC to communicate locally from Rust &lt;&gt; Swift&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/thesis&quot;&gt;Technology-supported activities through realtime, distributed, and collaborative interfaces&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:3&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/raycast/extensions/pull/4080&quot;&gt;[New Extension] Apple Mail #4080&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:4&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/soywod/himalaya&quot;&gt;Himalaya (CLI)&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:5&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://www.raycast.com/jns/himalaya&quot;&gt;Himalaya (Raycast)&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:6&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/soywod&quot;&gt;@soywood&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:8&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:8&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://pimalaya.org/comodoro/&quot;&gt;Comodoro&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>raycast-extension-for-himalaya-released</id>
    <title>Raycast extension for Himalaya released</title>
    <updated>2023-04-29T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/hyper-key-without-karabiner-elements"/>
    <content type="html">&lt;p&gt;
I came across a blog post&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt; about using &lt;code class=&quot;inline&quot;&gt;hidutil&lt;/code&gt; on macOS. As much as I’m thankful for those who worked on Karabiner Elements, I’m happy to remove a dependency!&lt;/p&gt;
&lt;p&gt;
This was a simple change to my dotfiles&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;. I had already used the builtin macOS ability to remap a modifier, which I had done from caps lock to ESC, which I had to remove.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://amitp.blogspot.com/2023/04/mac-keyboard-with-hidutil.html&quot;&gt;Mac keyboard with hidutil&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/dotfiles/commit/ee0e45ac0fc68ba055f73011b5a025c992fd5984&quot;&gt;dotfiles#ee0e45ac0fc68ba055f73011b5a025c992fd5984&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>hyper-key-without-karabiner-elements</id>
    <title>Hyper key without Karabiner Elements</title>
    <updated>2023-04-13T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/safari-opening-without-windows"/>
    <content type="html">&lt;p&gt;
This is one of those, “I don’t know why it broke but here’s what fixed it”. Safari started opening without any windows—private or otherwise.&lt;/p&gt;
&lt;p&gt;
Using AppCleaner&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;, search for “Safari”. I removed everything except what’s remaining in this screenshot. If there’s permission issues, use a terminal or Finder.&lt;/p&gt;
&lt;p&gt;
NB: Be &lt;em&gt;wise&lt;/em&gt; in what you delete.&lt;/p&gt;
&lt;img src=&quot;/images/notes/appcleaner-safari.png&quot; alt=&quot;The remaining files from using AppCleaner to cleanup Safari&quot; width=&quot;600&quot;&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://freemacsoft.net/appcleaner/&quot;&gt;AppCleaner&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>safari-opening-without-windows</id>
    <title>Safari opening without windows</title>
    <updated>2023-01-23T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/serialise-and-deserialise-enums-with-named-associated-values-from-rust-swift"/>
    <content type="html">&lt;p&gt;
Between Rust and Serde and Swift and &lt;code class=&quot;inline&quot;&gt;Codable&lt;/code&gt;, it’s &lt;em&gt;relatively&lt;/em&gt; easy to serialise and deserialise between the 2, using JSON. Whilst there aren’t shared definitions through a common format, such as Protobuf or MessagePack, for simple data it looks to be maintainable.&lt;/p&gt;
&lt;p&gt;
&lt;code class=&quot;inline&quot;&gt;serde_derive&lt;/code&gt; and &lt;code class=&quot;inline&quot;&gt;Codable&lt;/code&gt; deally save you writing encoders/serialisers and decoders/deserialisers. For Rust → Swift, I’ve so far had to write a decoder for enums with named associated values. Both Rust and Swift use nth-indexing for unnamed associated values, so I don’t &lt;em&gt;think&lt;/em&gt; it would be too hard. Without associated values, decoding worked without having to write anything for decoding.&lt;/p&gt;
&lt;p&gt;
Here are small snippets of the types and decoder.&lt;/p&gt;
&lt;p&gt;
Rust&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup rust&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;derive&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PartialEq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-2&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-1&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-3&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Paused&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-4&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-4&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Stopped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Working&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-5&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-5&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TakingShortBreak&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-6&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-6&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TakingLongBreak&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-7&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-7&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4823283446-3&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Swift&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;swift&quot;&gt;@available(macOS 13.0, *)
enum State: Codable {
    case Paused(duration: Duration)
    case Stopped
    case Working(duration: Duration)
    case TakingShortBreak(duration: Duration)
    case TakingLongBreak(duration: Duration)

    enum CodingKeys: String, CodingKey {
        case Paused
        case Stopped
        case Working
        case TakingShortBreak
        case TakingLongBreak
    }

    enum AdditionalCodingKeys: String, CodingKey {
        case duration
        case secs
        case nanos
    }

    init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let state = try? container.decode(String.self) {
            // For when it&amp;#39;s &quot;state&quot;:&quot;Stopped&quot;
            switch state {
            case &quot;Stopped&quot;:
                self = .Stopped
            default:
                fatalError(&quot;Unexpected value \(state)&quot;)
            }
        } else {
            // For when &quot;state&quot;:{&quot;Working&quot;:{&quot;duration&quot;:{&quot;secs&quot;:1,&quot;nanos&quot;:0}}}
            let values = try decoder.container(keyedBy: CodingKeys.self)

            // Dynamically get the CodingKey for the State from its enum
            let stateKey = values.allKeys.first!
            let stateContainer = try values.nestedContainer(
                keyedBy: AdditionalCodingKeys.self, forKey: stateKey
            )

            let durationKey = stateContainer.allKeys.first!
            let durationContainer = try stateContainer.nestedContainer(
                keyedBy: AdditionalCodingKeys.self, forKey: durationKey
            )

            let nanos = try durationContainer.decode(Int.self, forKey: .nanos)
            let secs = try durationContainer.decode(Int.self, forKey: .secs)

            let duration = Duration.nanoseconds(nanos) + Duration.seconds(secs)

            let state: State = {
                switch stateKey.stringValue {
                case &quot;Paused&quot;:
                    return State.Paused(duration: duration)
                case &quot;Working&quot;:
                    return State.Working(duration: duration)
                case &quot;TakingShortBreak&quot;:
                    return State.TakingShortBreak(duration: duration)
                case &quot;TakingLongBreak&quot;:
                    return State.TakingLongBreak(duration: duration)
                default:
                    fatalError(&quot;Unexpected value \(stateKey.stringValue)&quot;)
                }
            }()

            // Fake
            self = state
        }
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/y-pomodoro/blob/5e808a251db8971c8987b6f9cd738d5173ba8adc/core/src/lib.rs#L45&quot;&gt;jesse-c/y-pomodoro/blob/5e808a251db8971c8987b6f9cd738d5173ba8adc/core/src/lib.rs&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/y-pomodoro/blob/5e808a251db8971c8987b6f9cd738d5173ba8adc/client/Sources/pomodoro/pomodoro.swift#L72&quot;&gt;jesse-c/y-pomodoro/blob/5e808a251db8971c8987b6f9cd738d5173ba8adc/client/Sources/pomodoro/pomodoro.swift&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>serialise-and-deserialise-enums-with-named-associated-values-from-rust-swift</id>
    <title>Serialise and deserialise enums with named associated values from Rust → Swift</title>
    <updated>2023-01-02T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/compile-tree-sitter-langs-for-emacs-29-on-an-m1"/>
    <content type="html">&lt;p&gt;
Recently I tried Emacs 29&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt; and began slimming down my config&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;. Following the Tree-sitter starter guide&lt;a href=&quot;#fn:3&quot; id=&quot;fnref:3&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;3&lt;/a&gt;, I couldn’t figure out why I wasn’t able to start the appropriate mode. I would get errors along the lines of, &lt;code class=&quot;inline&quot;&gt;Cannot activate tree-sitter, because language definition for ...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;
After double-checking file paths and names, I compared my local build output of the recommend build script&lt;a href=&quot;#fn:4&quot; id=&quot;fnref:4&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;4&lt;/a&gt; to the provided release—which &lt;em&gt;did&lt;/em&gt; work .&lt;/p&gt;
&lt;p&gt;
The provided release was compiled for &lt;code class=&quot;inline&quot;&gt;x86_64&lt;/code&gt; and my local build output was for &lt;code class=&quot;inline&quot;&gt;arm64&lt;/code&gt;. That wasn’t wrong, as I &lt;em&gt;am&lt;/em&gt; on an M1.&lt;/p&gt;
&lt;p&gt;
Here’s the a simple and lazy to compile for &lt;code class=&quot;inline&quot;&gt;x64_64&lt;/code&gt; and have it work: &lt;code class=&quot;inline&quot;&gt;arch -x86_64 ./batch.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jimeh/emacs-builds&quot;&gt;jimeh/emacs-builds&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://www.reddit.com/r/emacs/comments/zqdrnz/replacing_packages_with_more_stripped_down/&quot;&gt;Replacing packages with more “stripped down” packages&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:3&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/emacs-mirror/emacs/blob/master/admin/notes/tree-sitter/starter-guide&quot;&gt;Tree-sitter starter guide&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:4&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/casouri/tree-sitter-module&quot;&gt;casouri/tree-sitter-module&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>compile-tree-sitter-langs-for-emacs-29-on-an-m1</id>
    <title>Compile Tree-sitter langs for Emacs 29 on an M1</title>
    <updated>2022-12-20T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/brewfile-app-relaunched"/>
    <content type="html">&lt;p&gt;
I’ve relaunched this app!&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt; The short version is that it’s the &lt;a href=&quot;https://gitignore.io&quot;&gt;gitignore.io&lt;/a&gt; equivalent for Homebrew Brewfiles.&lt;/p&gt;
&lt;p&gt;
There’s work to do, but, it’s in a reliable and reproducible state.&lt;/p&gt;
&lt;p&gt;
Previously, it was on a VPS running FreeBSD and was using jails with Nginx and Puma. Now, it’s still on a VPS, but it’s running Debian and is using containers with Caddy and Puma.&lt;/p&gt;
&lt;p&gt;
I do not regret using FreeBSD and jails. I learnt from it and would consider using them again, project-dependent.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://brewfile.app&quot;&gt;brewfile.app&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>brewfile-app-relaunched</id>
    <title>Brewfile app relaunched</title>
    <updated>2022-12-15T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/v1-release-of-appearancenotifier"/>
    <content type="html">&lt;p&gt;
v0.0.1 was released on 2021-06-09&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;. Since then, I’ve been using it daily both at home and at work. After a lazy approach to auto-starting it&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;, I added a daemon definition for macOS with &lt;code class=&quot;inline&quot;&gt;launchd&lt;/code&gt;. Recently as well, I added Emacs support.&lt;/p&gt;
&lt;p&gt;
With these changes, I remembered to do a release, giving us v1!&lt;a href=&quot;#fn:3&quot; id=&quot;fnref:3&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;3&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/AppearanceNotifier/releases/tag/v0.0.1&quot;&gt;Initial release&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/dotfiles/commit/7d46082baecb3e1440dd17c0c26fc3d2fd4e3cb6&quot;&gt;dotfiles#7d46082baecb3e1440dd17c0c26fc3d2fd4e3cb6&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:3&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/AppearanceNotifier/releases/tag/v1.0.0&quot;&gt;v1 release&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>v1-release-of-appearancenotifier</id>
    <title>v1 release of AppearanceNotifier</title>
    <updated>2022-12-08T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/custom-zola-project-type-for-projectile"/>
    <content type="html">&lt;p&gt;
I currently use Zola for this website and use Emacs as my editor with &lt;a href=&quot;https://github.com/bbatsov/projectile&quot;&gt;Projectile&lt;/a&gt;. Here’s a snippet from my dotfiles to add support for Zola projects to Projectile&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup diff&quot;&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/home/private_dot_config/emacs/init.el b/home/private_dot_config/emacs/init.el&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gh&quot;&gt;index c8d15dc..a3f9260 100644&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/home/private_dot_config/emacs/init.el&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/home/private_dot_config/emacs/init.el&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;&quot;&gt;@@ -797,7 +797,19 @@&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;&quot;&gt;:config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;&quot;&gt;(setq projectile-project-search-path &amp;#39;(&quot;~/Documents/projects/&quot; (&quot;~/src/&quot; . 3)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;&quot;&gt;(setq projectile-auto-discover nil)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;-  :init (counsel-projectile-mode))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+  :init (counsel-projectile-mode)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+  (projectile-register-project-type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   &amp;#39;zola&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   &amp;#39;(&quot;config.toml&quot; &quot;content&quot; &quot;static&quot; &quot;templates&quot; &quot;themes&quot;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   :project-file &quot;config.toml&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   :compile &quot;zola build&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   :test &quot;zola check&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+   :run &quot;zola server&quot;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

 &lt;/span&gt;&lt;span class=&quot;&quot;&gt;;; Make Ivy a bit more friendly by adding information to ivy buffers, e.g. description of commands in Alt-x, meta info when switching buffers, etc.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;&quot;&gt;(use-package ivy-rich&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://docs.projectile.mx/projectile/projects.html&quot;&gt;https://docs.projectile.mx/projectile/projects.html&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>custom-zola-project-type-for-projectile</id>
    <title>Custom Zola project type for Projectile</title>
    <updated>2022-11-06T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/counting-pages-in-sections-from-other-sections-in-zola"/>
    <content type="html">&lt;p&gt;
For the design of this website (as of 2022-10-11), I wanted to include the number of pages in a section—e.g., in the menu. I found a post on the Zola forum&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt; where I learnt about the &lt;code class=&quot;inline&quot;&gt;get_section&lt;/code&gt; and a section’s &lt;code class=&quot;inline&quot;&gt;pages&lt;/code&gt; variable. Then in the Tera documentation&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;, I found the &lt;code class=&quot;inline&quot;&gt;length&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;
Between the 2 of these, I’m able to display the pages count.&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% set notes = get_section(path=&quot;notes/_index.md&quot;) -%}
{{ notes.pages | length }}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://zola.discourse.group/t/section-vs-page/522/8&quot;&gt;https://zola.discourse.group/t/section-vs-page/522/8 ↗&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://tera.netlify.app/docs/#length&quot;&gt;https://tera.netlify.app/docs/#length ↗&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>counting-pages-in-sections-from-other-sections-in-zola</id>
    <title>Counting pages in sections from other sections in Zola</title>
    <updated>2022-10-11T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/multi-uis-for-a-daemon-and-using-grpc-to-communicate-locally-from-rust-swift"/>
    <content type="html">&lt;p&gt;
&lt;a href=&quot;#sample&quot;&gt;Jump to sample&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Multi-UIs Discovery of a paradigm&lt;/h1&gt;
&lt;p&gt;
While building an extension for &lt;a href=&quot;https://www.raycast.com/jns/sabnzbd&quot;&gt;SABnzbd&lt;/a&gt; for &lt;a href=&quot;https://www.raycast.com&quot;&gt;Raycast&lt;/a&gt;&lt;a href=&quot;#fn:1&quot; id=&quot;fnref:1&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;1&lt;/a&gt;, it made me think about a paradigm of multiple UIs. I interact with SABnzbd through its web UI, Raycast, and NZBHydra 2. There may even be another way that I’m not remembering.&lt;/p&gt;
&lt;p&gt;
The paradigm I thought of from this, and added to my projects list, was something like this:&lt;/p&gt;
&lt;img src=&quot;/images/notes/simple-map.png&quot; alt=&quot;Example: Multi-UIs connected with a daemon&quot; width=&quot;600&quot;&gt;
&lt;p&gt;
The name that I gave the project/idea was “headless for everything”, where headless is the daemon, in that drawing.&lt;/p&gt;
&lt;p&gt;
Some clients are local, while some are remote, like “Export to website”. There are more and more local- and offline-first projects. What if you could export your data to another service? Chuck some local issues/tickets up in Jira and Linear? What if you could E2E as part of that? What if it could realtime, distributed, and collaborative? This is a concept I covered with my undergraduate thesis&lt;a href=&quot;#fn:2&quot; id=&quot;fnref:2&quot; class=&quot;footnote&quot; title=&quot;see footnote&quot;&gt;2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;
The obvious—and huge—downside is that adding a network in-between brings all the issues that a network inherently has. Maybe &lt;a href=&quot;https://hyperfiddle.notion.site/Demo-Photon-a-full-stack-Clojure-Script-dialect-with-compiler-managed-client-server-data-sync-57aee367c20e45b3b80366d1abe4fbc3&quot;&gt;Photon&lt;/a&gt; will help us out.&lt;/p&gt;
&lt;h1&gt;
My first experiment with this paradigm&lt;/h1&gt;
&lt;p&gt;
The Pomodoro technique has occasionally worked well for me. On macOS, I use &lt;a href=&quot;https://tomato2.app&quot;&gt;Tomato 2&lt;/a&gt;—and highly recommend it! A Pomodoro timer became the first experiment for me.&lt;/p&gt;
&lt;p&gt;
The first version used sockets and an SQLite DB with the daemon and CLI client written in Rust. I wanted notifications though and with notarising/signing, I didn’t like how I would send native macOS notifications.&lt;/p&gt;
&lt;p&gt;
The second version got rid of SQLite and kept it all in memory to simplify it and used MessagePack.&lt;/p&gt;
&lt;p&gt;
The third version, which is a work-in-progress, gets rid of sockets and uses gRPC for communication so that I can write a client in Swift. I did look around, and it seemed possible to use sockets with Swift, but again, I didn’t like how I would’ve had to do so.&lt;/p&gt;
&lt;h1&gt;
Sample: How-to use gRPC to communicate between Rust &lt;&gt; Swift {#sample}&lt;/h1&gt;
&lt;p&gt;
Repository: &lt;a href=&quot;https://github.com/jesse-c/grpc-example-rust-swift&quot;&gt;https://github.com/jesse-c/grpc-example-rust-swift&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
While I plan on writing a step-by-step tutorial, in the desire to get this idea and sample out to the world, I’ve published the repository.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:1&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
I’m still not decided on Raycast. I would go back to Alfred in a heartbeat if it wasn’t so visually dated.      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
&lt;a title=&quot;return to article&quot; class=&quot;reversefootnote&quot; href=&quot;#fnref:2&quot;&gt;&amp;#x21A9;&lt;/a&gt;      &lt;p&gt;
&lt;a href=&quot;https://github.com/jesse-c/thesis&quot;&gt;Technology-supported activities through realtime, distributed, and collaborative interfaces&lt;/a&gt;      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>multi-uis-for-a-daemon-and-using-grpc-to-communicate-locally-from-rust-swift</id>
    <title>Multi-UIs for a daemon and using gRPC to communicate locally from Rust &lt;&gt; Swift</title>
    <updated>2022-06-24T00:00:00Z</updated>
  </entry>
  <entry>
    <link rel="alternate" href="https://j-e-s-s-e.com/notes/retrospective-on-a-side-project-autovolume-for-macos"/>
    <content type="html">&lt;p&gt;
&lt;a href=&quot;http://www.jesseclaven.com/projects/AutoVolume/&quot;&gt;AutoVolume&lt;/a&gt; is a free and open source app that automatically changes the volume when your Mac wakes from sleep. I’m going to give a brief overview from how it started, to being released.&lt;/p&gt;
&lt;h2&gt;
Initial idea&lt;/h2&gt;
&lt;p&gt;
From my &lt;code class=&quot;inline&quot;&gt;idea.md&lt;/code&gt; file for this, one night I had my volume up high because I was watching a TV show, and the next day when I received an email notification it was super loud, which was just a bit shocking and embarrassing. I wrote down the idea of, ‘If sleep longer than time period x, show a notification on log in with action to mute’. The end product ended up being similar.&lt;/p&gt;
&lt;p&gt;
I took this as an opportunity to do a few other little things that I’ve been wanting to do: design a website for the the first time in a while, create an animation, and code a website using no IDs or classes.&lt;/p&gt;
&lt;h2&gt;
Finding time&lt;/h2&gt;
&lt;p&gt;
I wrote down the idea on 16-06-26 and the first commit to the repository was on 16-12-18.  The most recent commit was on 17-04-05. From having the idea to releasing something took around 10 months. That wasn’t because of difficulty in any part, but because it was very low priority to me&amp;mdash;and that was okay!&lt;/p&gt;
&lt;p&gt;
Staying true to the original idea and a minimum feature set was key as well. It made it easy to release it sooner and evaluate if people would use it, and how.&lt;/p&gt;
&lt;p&gt;
A relatively large amount of time was spent on the animation. I searched for different ways to do it (e.g. using an animation code library) and settled on After Effects. While you can easily do it in AE, I was finding parts of the UX (importing lots of layers into AE) tedious. In the end I switched to Photoshop and created the animation in there in a few minutes.&lt;/p&gt;
&lt;h2&gt;
Evaluation&lt;/h2&gt;
&lt;p&gt;
The common saying of build something for your own problem was true&amp;mdash;and it was satisfying seeing people say thank you, and that it was just what they wanted, either knowingly, or after reading what it did. I personally always have it running and have found it useful.&lt;/p&gt;
&lt;p&gt;
It reached the #1 spot on Designer News which was cool to see. Someone posted it to Product Hunt on my behalf as well. I posted it to a private forum I’m apart of as well. What was also satisying was seeing all the people star the repository on GitHub.&lt;/p&gt;
&lt;h2&gt;
What’s next&lt;/h2&gt;
&lt;p&gt;
I already have my own TODO items, but people had suggestions from the get go. For now it does it’s purpose and works ‘perfectly’ in that regard, so I’m going to leave it alone for a bit.&lt;/p&gt;
</content>
    <author>
      <name>Jesse Claven</name>
      <uri>https://j-e-s-s-e.com</uri>
    </author>
    <id>retrospective-on-a-side-project-autovolume-for-macos</id>
    <title>Retrospective on a side-project: AutoVolume for macOS</title>
    <updated>2017-04-19T00:00:00Z</updated>
  </entry>
</feed>